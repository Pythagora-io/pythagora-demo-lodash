import pad from '../../../pad.js';

describe('pad', () => {
  test('pad("abc", 8) should return "  abc   "', () => {
    expect(pad('abc', 8)).toBe('  abc   ');
  });

  test('pad("abc", 8, "_-") should return "_-abc_-_"', () => {
    expect(pad('abc', 8, '_-')).toBe('_-abc_-_');
  });

  test('pad("abc", 2) should return "abc"', () => {
    expect(pad('abc', 2)).toBe('abc');
  });

  test('pad("", 2) should return "  "', () => {
    expect(pad('', 2)).toBe('  ');
  });

  test('pad("abc", 0) should return "abc"', () => {
    expect(pad('abc', 0)).toBe('abc');
  });

  test('pad("abc") should return "abc"', () => {
    expect(pad('abc')).toBe('abc');
  });

  test('pad("abc", NaN) should return "abc"', () => {
    expect(pad('abc', NaN)).toBe('abc');
  });

  test('pad("abc", 4, "сђю") should return "сђюabc"', () => {
    expect(pad('abc', 4, 'сђю')).toBe('abcсђю');
  });

  test('pad("abc", 6, "сђю") should return "сђюabcсђю"', () => {
    expect(pad('abc', 6, 'сђю')).toBe('сђюabcсђюсђю');
  });

  test('pad("abc", -1) should return "abc"', () => {
    expect(pad('abc', -1)).toBe('abc');
  });

  test('pad("­Ъљ╝", 4, "­ЪїИ") should return "­ЪїИ­Ъљ╝­ЪїИ­ЪїИ"', () => {
    expect(pad('­Ъљ╝', 4, '­ЪїИ')).toBe('­ЪїИ­Ъљ╝­ЪїИ­ЪїИ');
  });
});
